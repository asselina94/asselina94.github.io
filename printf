#include <stdlib.h>
#include <stdarg.h>
#include <string.h>
#include <stdio.h>
#include <unistd.h>
char* my_itoa( int value, char*buffer, int base) {                    // imp my-itoa function
    if (base < 2 || base > 16) return NULL; //invalid input
    int tmp2 = value, i = 0;
    int tmp = value;
    if (base == 10 && value < 0) {
        i ++;
        buffer[0] = '-';
        tmp2 = -tmp2;
        tmp = -tmp;
    }
    while(tmp2 > 0) {
        tmp2 /= base;
        i ++;
    }
    buffer[i] = '\0';
    i --;
    
    while (tmp > 0) {
        char c = tmp % base + '0';
        if (tmp % base > 9) c = (tmp % base - 10) + 'a';
        buffer[i] = c;
        tmp /= base;
        i --;
    }
    printf("%s\n", buffer);
    return buffer;
}
int my_printf(char * restrict format, ...){
    va_list arguments;          // list of arg

    if (format == NULL)
        return (-1);
    int i = 0;
    int j = 0;
    char buff[100], str[20];
    va_start(arguments, format);
    while (format[i]) {
        if (format[i] == '%') {
            i ++;
            if (format[i] == 'd' || format[i] == 'u') {
                my_itoa(va_arg(arguments, int ), str, 10);
                for (int t = 0; t < strlen(str); ++t, ++j) buff[j] = str[t];
            }
            else if (format[i] == 'o') {
                my_itoa(va_arg(arguments, int ), str, 8);
                for (int t = 0; t < strlen(str); ++t, ++j) buff[j] = str[t];
            }
            else if (format[i] == 'x') {
                my_itoa(va_arg(arguments, int ), str, 16);
                for (int t = 0; t < strlen(str); ++t, ++j) buff[j] = str[t];
            }
            else if (format[i] == 'c') {
                buff[j] = (char)va_arg(arguments, int );
                j++;
            }
            else if (format[i] == 's') {
                char *s = va_arg(arguments,char *);
                for (int t = 0; s[t] != '\0'; ++t, ++j) buff[j] = s[t];
            }
            else if (format[i] == 'p') {
                void *ptrAddress = (void *) va_arg(arguments, void *);
                int x = ptrAddress;
                buff[j++] = '0';
                buff[j++] = 'x';
                my_itoa(x, str, 16);
                for (int t = 0; t < strlen(str); ++t, ++j) buff[j] = str[t];
            }
            else break;
            i ++;
        } else {
            buff[j] = format[i];
            j ++;
            i ++;
        } 
    }
    fwrite(buff, j, 1, stdout);
    //printf("%s", buff);
    va_end(arguments);
    return j;
}
int main() {
    char c = 'a';
    //printf("Hello %d %c %x world %d %s %p\n", -102, 'a',174, 103, "aa12123", (void *)1213);
    int k = my_printf("Hello %d %c %x world %d %s %p\n", -102, 'a',174, 103, "aa12123",(void *)1213);
}    

