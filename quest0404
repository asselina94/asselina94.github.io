quest04
1/////
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
int* my_range(int a, int b) {  
    int* arr = (int *) malloc( (b-a)* sizeof(int));
    for (int i=0; i< b-a;i++){
        arr[i]= a+i;
    }
    return arr;
}

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
char* my_strdup(char* a) {
    int l=strlen(a);
    char* arr=malloc(l * sizeof(char));
    for (int i = 0; i < l; i=i+1) {
        arr[i] = a[i];
    }
    return arr;
}



#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void my_print_words_array(string_array* a) {
  int len =a -> size;
  char** arr=a -> array;
  for (int i=0; i<len; i++){
    printf("%s\n", arr[i]);
  }
}

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
integer_array* my_count_on_it(string_array* a) {
    int len = a -> size;
    char** array= a-> array;
    //int* arr = (int *) malloc(len* sizeof(int));
    int count;
    int j;
    integer_array* answer = malloc(sizeof(integer_array*));
    answer->array = malloc(len * sizeof(int));
    answer->size = len;
    for (int i=0; i<len; i++){
        j=strlen(array[i]);
        //sizeof(array[i])/sizeof(int);
        //printf("%d", j);
        answer->array[i] = j;
    }
    return answer;
}


#include <stdio.h>
#include <stdlib.h>
#include <string.h>
char* my_join(string_array* a, char* b) {
    char**array = a -> array;
    int len = a -> size;
    int count = 0;
    int d;
    for (int i=0; i<len; i++){
        count=count+strlen(array[i]);
       // d = count+len -1;
    } 
    count= count+len-1;
    char* answer = malloc( count* sizeof(char));
    for (int j=0; j<len;j++){
        strcat(answer,array[j]);
        if (j<len-1)
        strcat(answer,b);
    }
    return answer;

}


#include <stdio.h>
#include <stdlib.h>
#include <string.h>
char* my_robot_simulator(char* a) {
    int x = 0, y = 0, dir = 0;
    int dx[]={0, 1, 0, -1};
    int dy[]={-1, 0, 1, 0};
    for (int i = 0; i < strlen(a); ++i) {
        if (a[i] == 'R') dir ++;
        if (a[i] == 'L') dir --;
        if (dir < 0) dir += 4;
        if (dir >= 4) dir %= 4;
        if (a[i] == 'A') x += dx[dir], y += dy[dir];
    }
    
    char *answer = malloc(100 * sizeof(char));
    char xx[20], yy[20];
    sprintf(xx, "%d", x);
    sprintf(yy, "%d", y);
    strcat(answer, "{x: ");
    strcat(answer, xx);
    strcat(answer, ", y: ");
    strcat(answer, yy);
    strcat(answer, ", bearing: '");
    if (dir == 0) strcat(answer, "north");
    if (dir == 1) strcat(answer, "east");
    if (dir == 2) strcat(answer, "south");
    if (dir == 3) strcat(answer, "west");
    strcat(answer, "'}");
}
